//lc-238
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int ans[]=new int[n];
        int left[]=new int[n];
        left[0]=1;
        for(int i=1;i<n;i++)
        {
            left[i]=left[i-1]*nums[i-1];
        }
        int right[]=new int[n];
        right[n-1]=1;
        for(int i=n-2;i>=0;i--)
        {
            right[i]=right[i+1]*nums[i+1];
        }
        for(int i=0;i<n;i++)
        {
            ans[i]=left[i]*right[i];
        }
        return ans;
    }
}

//tle
// class Solution {
//     public int[] productExceptSelf(int[] nums) {
//         int ans[]=new int[nums.length];
//         for(int i=0;i<nums.length;i++)
//         {
//             int prod=1;
//             for(int j=0;j<nums.length;j++)//compare one array with same array
//             {
//                 if(j != i)
//                 {
//                     prod*=nums[j];//product of rem except self
//                 }
//             }
//             ans[i]=prod;//store each iteration prod in array
//         }
//         return ans; 
//     }
// }

//lc-108
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return buildBST(nums,0,nums.length-1);
    }
    public TreeNode buildBST(int nums[],int left,int right)
    {
        if(left>right)
        {
            return null;
        }

        //pick mid as root
        int mid=left+(right-left)/2;
        TreeNode root=new TreeNode(nums[mid]);

        //recursively do that for left and right subtree for height balanced bst
        //Left half of the array → left subtree
        //Right half of the array → right subtree
        root.left=buildBST(nums,left,mid-1);
        root.right=buildBST(nums,mid+1,right);
        return root;
    }
}

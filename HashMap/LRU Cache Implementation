//asked in desk 365 drive
//get(key) → Return value if present, else return -1
//put(key, value) → Add or update key-value pair. If capacity is full, remove the least recently used key before inserting.

import java.util.*;

class LRUCache extends LinkedHashMap<Integer, Integer> {
    private int capacity;

    public LRUCache(int capacity) {
        // initialCapacity=16, loadFactor=0.75, accessOrder=true
        //LinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder)
        super(capacity, 0.75f, true);
        this.capacity = capacity;
    }

    public int get(int key) {
        return super.getOrDefault(key, -1);
    }

    public void put(int key, int value) {
        super.put(key, value);
    }

    // This method is automatically called after every put
    //this is an inbuilt method in linkedhashmap with default value as false
    @Override
    protected boolean removeEldestEntry(Map.Entry<Integer, Integer> eldest) {
        return size() > capacity;
    }
}

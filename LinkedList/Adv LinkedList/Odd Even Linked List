//lc-328
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head==null || head.next==null)
        {
            return head;
        }
        ListNode odd=head; //first node is odd
        ListNode even=head.next; //next node is even
        ListNode evenHead=even; //store even head to connect later
        while(even!=null && even.next!=null)
        {
            odd.next=even.next;//link odd to next odd
            odd=odd.next;//move odd pointer

            even.next=odd.next;//link even to next even
            even=even.next;//move even pointer
        }
        odd.next=evenHead;//connect last odd node to starting even node
        return head;

    }
}
